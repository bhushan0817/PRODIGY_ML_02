{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b3fba8df",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:31.092945Z",
     "iopub.status.busy": "2023-11-22T11:01:31.092149Z",
     "iopub.status.idle": "2023-11-22T11:01:31.870173Z",
     "shell.execute_reply": "2023-11-22T11:01:31.868459Z"
    },
    "papermill": {
     "duration": 0.793671,
     "end_time": "2023-11-22T11:01:31.873246",
     "exception": false,
     "start_time": "2023-11-22T11:01:31.079575",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/customer-segmentation-tutorial-in-python/Mall_Customers.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e78cc738",
   "metadata": {
    "papermill": {
     "duration": 0.011676,
     "end_time": "2023-11-22T11:01:31.895647",
     "exception": false,
     "start_time": "2023-11-22T11:01:31.883971",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f84dd265",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:31.918399Z",
     "iopub.status.busy": "2023-11-22T11:01:31.917808Z",
     "iopub.status.idle": "2023-11-22T11:01:31.966821Z",
     "shell.execute_reply": "2023-11-22T11:01:31.965702Z"
    },
    "papermill": {
     "duration": 0.062859,
     "end_time": "2023-11-22T11:01:31.969079",
     "exception": false,
     "start_time": "2023-11-22T11:01:31.906220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
       "CustomerID                                                         \n",
       "1             Male   19                  15                      39\n",
       "2             Male   21                  15                      81\n",
       "3           Female   20                  16                       6\n",
       "4           Female   23                  16                      77\n",
       "5           Female   31                  17                      40"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/kaggle/input/customer-segmentation-tutorial-in-python/Mall_Customers.csv', index_col=0)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b944d826",
   "metadata": {
    "papermill": {
     "duration": 0.009633,
     "end_time": "2023-11-22T11:01:31.988836",
     "exception": false,
     "start_time": "2023-11-22T11:01:31.979203",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Understand Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ab314754",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.011815Z",
     "iopub.status.busy": "2023-11-22T11:01:32.010931Z",
     "iopub.status.idle": "2023-11-22T11:01:32.033173Z",
     "shell.execute_reply": "2023-11-22T11:01:32.031386Z"
    },
    "papermill": {
     "duration": 0.036942,
     "end_time": "2023-11-22T11:01:32.035704",
     "exception": false,
     "start_time": "2023-11-22T11:01:31.998762",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 200 entries, 1 to 200\n",
      "Data columns (total 4 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   Gender                  200 non-null    object\n",
      " 1   Age                     200 non-null    int64 \n",
      " 2   Annual Income (k$)      200 non-null    int64 \n",
      " 3   Spending Score (1-100)  200 non-null    int64 \n",
      "dtypes: int64(3), object(1)\n",
      "memory usage: 7.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d1e89b4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.058112Z",
     "iopub.status.busy": "2023-11-22T11:01:32.057613Z",
     "iopub.status.idle": "2023-11-22T11:01:32.083431Z",
     "shell.execute_reply": "2023-11-22T11:01:32.081971Z"
    },
    "papermill": {
     "duration": 0.040223,
     "end_time": "2023-11-22T11:01:32.086213",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.045990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>38.850000</td>\n",
       "      <td>60.560000</td>\n",
       "      <td>50.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>13.969007</td>\n",
       "      <td>26.264721</td>\n",
       "      <td>25.823522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>28.750000</td>\n",
       "      <td>41.500000</td>\n",
       "      <td>34.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>36.000000</td>\n",
       "      <td>61.500000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>73.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>70.000000</td>\n",
       "      <td>137.000000</td>\n",
       "      <td>99.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age  Annual Income (k$)  Spending Score (1-100)\n",
       "count  200.000000          200.000000              200.000000\n",
       "mean    38.850000           60.560000               50.200000\n",
       "std     13.969007           26.264721               25.823522\n",
       "min     18.000000           15.000000                1.000000\n",
       "25%     28.750000           41.500000               34.750000\n",
       "50%     36.000000           61.500000               50.000000\n",
       "75%     49.000000           78.000000               73.000000\n",
       "max     70.000000          137.000000               99.000000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5cc7f526",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.110808Z",
     "iopub.status.busy": "2023-11-22T11:01:32.110415Z",
     "iopub.status.idle": "2023-11-22T11:01:32.120632Z",
     "shell.execute_reply": "2023-11-22T11:01:32.119402Z"
    },
    "papermill": {
     "duration": 0.025314,
     "end_time": "2023-11-22T11:01:32.123168",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.097854",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    112\n",
       "Male       88\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6cd839f8",
   "metadata": {
    "papermill": {
     "duration": 0.011614,
     "end_time": "2023-11-22T11:01:32.146042",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.134428",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Visualize "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "836baaa5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.170306Z",
     "iopub.status.busy": "2023-11-22T11:01:32.169896Z",
     "iopub.status.idle": "2023-11-22T11:01:32.175803Z",
     "shell.execute_reply": "2023-11-22T11:01:32.174487Z"
    },
    "papermill": {
     "duration": 0.020959,
     "end_time": "2023-11-22T11:01:32.178143",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.157184",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d78444d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.202314Z",
     "iopub.status.busy": "2023-11-22T11:01:32.201886Z",
     "iopub.status.idle": "2023-11-22T11:01:32.568242Z",
     "shell.execute_reply": "2023-11-22T11:01:32.567078Z"
    },
    "papermill": {
     "duration": 0.381747,
     "end_time": "2023-11-22T11:01:32.571147",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.189400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='CustomerID'>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Annual Income (k$)'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "eb4f642c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.597223Z",
     "iopub.status.busy": "2023-11-22T11:01:32.596380Z",
     "iopub.status.idle": "2023-11-22T11:01:32.869567Z",
     "shell.execute_reply": "2023-11-22T11:01:32.868309Z"
    },
    "papermill": {
     "duration": 0.289347,
     "end_time": "2023-11-22T11:01:32.872253",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.582906",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: ylabel='Frequency'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Spending Score (1-100)'].plot(kind='hist')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8902b28",
   "metadata": {
    "papermill": {
     "duration": 0.013441,
     "end_time": "2023-11-22T11:01:32.897791",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.884350",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19c4fb6a",
   "metadata": {
    "papermill": {
     "duration": 0.011864,
     "end_time": "2023-11-22T11:01:32.922034",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.910170",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Feature Extraction\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "99e0294a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.949919Z",
     "iopub.status.busy": "2023-11-22T11:01:32.948955Z",
     "iopub.status.idle": "2023-11-22T11:01:32.958147Z",
     "shell.execute_reply": "2023-11-22T11:01:32.957355Z"
    },
    "papermill": {
     "duration": 0.025978,
     "end_time": "2023-11-22T11:01:32.960568",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.934590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# convert Gender to numeric\n",
    "df = pd.concat([df,pd.get_dummies(df['Gender'], drop_first=True)], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a94ea93e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:32.987147Z",
     "iopub.status.busy": "2023-11-22T11:01:32.986406Z",
     "iopub.status.idle": "2023-11-22T11:01:32.994319Z",
     "shell.execute_reply": "2023-11-22T11:01:32.993460Z"
    },
    "papermill": {
     "duration": 0.023955,
     "end_time": "2023-11-22T11:01:32.996701",
     "exception": false,
     "start_time": "2023-11-22T11:01:32.972746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns='Gender', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5f2cd5d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:33.023021Z",
     "iopub.status.busy": "2023-11-22T11:01:33.021734Z",
     "iopub.status.idle": "2023-11-22T11:01:33.033860Z",
     "shell.execute_reply": "2023-11-22T11:01:33.032722Z"
    },
    "papermill": {
     "duration": 0.027575,
     "end_time": "2023-11-22T11:01:33.036127",
     "exception": false,
     "start_time": "2023-11-22T11:01:33.008552",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)   Male\n",
       "CustomerID                                                        \n",
       "1            19                  15                      39   True\n",
       "2            21                  15                      81   True\n",
       "3            20                  16                       6  False\n",
       "4            23                  16                      77  False\n",
       "5            31                  17                      40  False"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e4f30f60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:33.062439Z",
     "iopub.status.busy": "2023-11-22T11:01:33.061670Z",
     "iopub.status.idle": "2023-11-22T11:01:33.068199Z",
     "shell.execute_reply": "2023-11-22T11:01:33.067394Z"
    },
    "papermill": {
     "duration": 0.021941,
     "end_time": "2023-11-22T11:01:33.070541",
     "exception": false,
     "start_time": "2023-11-22T11:01:33.048600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Male'] = df['Male'].replace({True:1, False:0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bc3bcd12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:33.097095Z",
     "iopub.status.busy": "2023-11-22T11:01:33.095910Z",
     "iopub.status.idle": "2023-11-22T11:01:33.112645Z",
     "shell.execute_reply": "2023-11-22T11:01:33.111122Z"
    },
    "papermill": {
     "duration": 0.032694,
     "end_time": "2023-11-22T11:01:33.115354",
     "exception": false,
     "start_time": "2023-11-22T11:01:33.082660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>35</td>\n",
       "      <td>120</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>45</td>\n",
       "      <td>126</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>32</td>\n",
       "      <td>126</td>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>32</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>30</td>\n",
       "      <td>137</td>\n",
       "      <td>83</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)  Male\n",
       "CustomerID                                                       \n",
       "1            19                  15                      39     1\n",
       "2            21                  15                      81     1\n",
       "3            20                  16                       6     0\n",
       "4            23                  16                      77     0\n",
       "5            31                  17                      40     0\n",
       "...         ...                 ...                     ...   ...\n",
       "196          35                 120                      79     0\n",
       "197          45                 126                      28     0\n",
       "198          32                 126                      74     1\n",
       "199          32                 137                      18     1\n",
       "200          30                 137                      83     1\n",
       "\n",
       "[200 rows x 4 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "debdb457",
   "metadata": {
    "papermill": {
     "duration": 0.011818,
     "end_time": "2023-11-22T11:01:33.139440",
     "exception": false,
     "start_time": "2023-11-22T11:01:33.127622",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "98c63c95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:33.165995Z",
     "iopub.status.busy": "2023-11-22T11:01:33.165520Z",
     "iopub.status.idle": "2023-11-22T11:01:34.851924Z",
     "shell.execute_reply": "2023-11-22T11:01:34.851007Z"
    },
    "papermill": {
     "duration": 1.703,
     "end_time": "2023-11-22T11:01:34.854633",
     "exception": false,
     "start_time": "2023-11-22T11:01:33.151633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "86380111",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:34.881532Z",
     "iopub.status.busy": "2023-11-22T11:01:34.880864Z",
     "iopub.status.idle": "2023-11-22T11:01:34.973112Z",
     "shell.execute_reply": "2023-11-22T11:01:34.970785Z"
    },
    "papermill": {
     "duration": 0.108586,
     "end_time": "2023-11-22T11:01:34.975637",
     "exception": false,
     "start_time": "2023-11-22T11:01:34.867051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=5)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=5)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "km = KMeans(n_clusters = 5)\n",
    "km.fit(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "17b4da96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.004171Z",
     "iopub.status.busy": "2023-11-22T11:01:35.003698Z",
     "iopub.status.idle": "2023-11-22T11:01:35.016102Z",
     "shell.execute_reply": "2023-11-22T11:01:35.014759Z"
    },
    "papermill": {
     "duration": 0.029791,
     "end_time": "2023-11-22T11:01:35.018955",
     "exception": false,
     "start_time": "2023-11-22T11:01:34.989164",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 2, 1, 2, 1,\n",
       "       2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\n",
       "       2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\n",
       "       2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\n",
       "       2, 1], dtype=int32)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preds = km.predict(df)\n",
    "preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e07a7c7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.048776Z",
     "iopub.status.busy": "2023-11-22T11:01:35.048306Z",
     "iopub.status.idle": "2023-11-22T11:01:35.065001Z",
     "shell.execute_reply": "2023-11-22T11:01:35.063675Z"
    },
    "papermill": {
     "duration": 0.034659,
     "end_time": "2023-11-22T11:01:35.067685",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.033026",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "      <th>Segments</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>35</td>\n",
       "      <td>120</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>45</td>\n",
       "      <td>126</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>32</td>\n",
       "      <td>126</td>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>32</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>30</td>\n",
       "      <td>137</td>\n",
       "      <td>83</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)  Male  Segments\n",
       "CustomerID                                                                 \n",
       "1            19                  15                      39     1         3\n",
       "2            21                  15                      81     1         4\n",
       "3            20                  16                       6     0         3\n",
       "4            23                  16                      77     0         4\n",
       "5            31                  17                      40     0         3\n",
       "...         ...                 ...                     ...   ...       ...\n",
       "196          35                 120                      79     0         1\n",
       "197          45                 126                      28     0         2\n",
       "198          32                 126                      74     1         1\n",
       "199          32                 137                      18     1         2\n",
       "200          30                 137                      83     1         1\n",
       "\n",
       "[200 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Segments'] = preds\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "add5c007",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.098201Z",
     "iopub.status.busy": "2023-11-22T11:01:35.097727Z",
     "iopub.status.idle": "2023-11-22T11:01:35.104579Z",
     "shell.execute_reply": "2023-11-22T11:01:35.103211Z"
    },
    "papermill": {
     "duration": 0.025134,
     "end_time": "2023-11-22T11:01:35.107070",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.081936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Clusters'] = preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "494d0cab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.138128Z",
     "iopub.status.busy": "2023-11-22T11:01:35.137076Z",
     "iopub.status.idle": "2023-11-22T11:01:35.145450Z",
     "shell.execute_reply": "2023-11-22T11:01:35.144353Z"
    },
    "papermill": {
     "duration": 0.026985,
     "end_time": "2023-11-22T11:01:35.148056",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.121071",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Segments'].replace({2:'high_earn_less_spend',\n",
    "                       1:'high_earn_high_spend',\n",
    "                       0:'mid_earn_mid_spend',\n",
    "                       3:'less_earn_high_spend',\n",
    "                       4:'less_earn_less_spend'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "523bd616",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.178004Z",
     "iopub.status.busy": "2023-11-22T11:01:35.177607Z",
     "iopub.status.idle": "2023-11-22T11:01:35.926843Z",
     "shell.execute_reply": "2023-11-22T11:01:35.925345Z"
    },
    "papermill": {
     "duration": 0.767536,
     "end_time": "2023-11-22T11:01:35.929572",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.162036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Assuming your data is in a DataFrame named 'df'\n",
    "# If not, you can create a DataFrame using pd.DataFrame(your_data, columns=your_columns)\n",
    "# where your_data is the data you provided and your_columns is a list of column names\n",
    "\n",
    "# Scatter plot between 'Annual Income' and 'Spending Score' with color-coded clusters\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.scatterplot(x='Annual Income (k$)', y='Spending Score (1-100)', hue='Segments', data=df, palette='viridis',s=100)\n",
    "plt.title('Clusters based on Annual Income and Spending Score')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c26a216",
   "metadata": {
    "papermill": {
     "duration": 0.014617,
     "end_time": "2023-11-22T11:01:35.960084",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.945467",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "0 -> high_earn_less_spend <br>\n",
    "1 -> high_earn_high_spend<br>\n",
    "2 -> mid_earn_mid_spend<br>\n",
    "3 -> less_earn_high_spend<br>\n",
    "4 -> less_earn_less_spend<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ea286178",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:35.992294Z",
     "iopub.status.busy": "2023-11-22T11:01:35.991359Z",
     "iopub.status.idle": "2023-11-22T11:01:36.003038Z",
     "shell.execute_reply": "2023-11-22T11:01:36.001734Z"
    },
    "papermill": {
     "duration": 0.03049,
     "end_time": "2023-11-22T11:01:36.005439",
     "exception": false,
     "start_time": "2023-11-22T11:01:35.974949",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([4], dtype=int32)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "km.predict([[21,15,81,1]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "843074ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T11:01:36.038087Z",
     "iopub.status.busy": "2023-11-22T11:01:36.037030Z",
     "iopub.status.idle": "2023-11-22T11:01:36.046238Z",
     "shell.execute_reply": "2023-11-22T11:01:36.045320Z"
    },
    "papermill": {
     "duration": 0.027932,
     "end_time": "2023-11-22T11:01:36.048544",
     "exception": false,
     "start_time": "2023-11-22T11:01:36.020612",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Segments\n",
       "mid_earn_mid_spend      79\n",
       "high_earn_high_spend    39\n",
       "high_earn_less_spend    36\n",
       "less_earn_high_spend    23\n",
       "less_earn_less_spend    23\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Segments'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80eba2c1",
   "metadata": {
    "papermill": {
     "duration": 0.016605,
     "end_time": "2023-11-22T11:01:36.135351",
     "exception": false,
     "start_time": "2023-11-22T11:01:36.118746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6689c050",
   "metadata": {
    "papermill": {
     "duration": 0.01606,
     "end_time": "2023-11-22T11:01:36.168527",
     "exception": false,
     "start_time": "2023-11-22T11:01:36.152467",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9eea581",
   "metadata": {
    "papermill": {
     "duration": 0.015914,
     "end_time": "2023-11-22T11:01:36.200818",
     "exception": false,
     "start_time": "2023-11-22T11:01:36.184904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aabc0e57",
   "metadata": {
    "papermill": {
     "duration": 0.015958,
     "end_time": "2023-11-22T11:01:36.233150",
     "exception": false,
     "start_time": "2023-11-22T11:01:36.217192",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 42674,
     "sourceId": 74935,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30587,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.265108,
   "end_time": "2023-11-22T11:01:36.871192",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-11-22T11:01:26.606084",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
